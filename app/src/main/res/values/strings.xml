<resources>
    <!-- app -->
    <string name="app_name">Rememo</string>


    <!-- title -->
    <string name="title_home">Rememo</string>
    <string name="basic_welcome">Welcome</string>
    <string name="title_collections">Collections</string>
    <string name="title_classes">Classes</string>
    <string name="title_students">Students</string>
    <string name="title_train">Train</string>
    <string name="title_learn_coll">Learn a collection</string>
    <string name="title_test_skills">Test your knowledge</string>
    <string name="title_"></string>


    <!-- login -->
    <string name="login_email_addr">Email</string>
    <string name="login_send_email">Send Email</string>
    <string name="login_go_to_rememo">Go to Rememo</string>
    <string name="login_check_inbox">Check inbox</string>
    <string name="login_instructions">Login or signup with email</string>
    <string name="login_add_name_and_start">Add your name and start using Rememo</string>
    <string name="login_sent_to">Email sent to:</string>
    <string name="login_logged_as_STR">Logged in as %s</string>

    <string name="login_unknown_user">Unknown user</string>
    <string name="login_cant_empty_mail">Email can\'t be empty</string>
    <string name="login_cant_empty_name">Name can\'t be empty</string>
    <string name="login_too_long_name">Name can\'t be this long</string>
    <string name="login_error_saving_name_retry">Error saving name, please try again</string>
    <string name="login_error">Error logging in</string>
    <string name="login_failed_retry">Failed login, please try again</string>
    <string name="login_failed_use_same_device">Failed login, use the same device you send your email with</string>

    <string name="login_"></string>


    <!-- basic -->
    <string name="basic_name">Name</string>
    <string name="basic_or">Or</string>

    <string name="basic_start">Start</string>
    <string name="basic_share">Share</string>
    <string name="basic_create">Create</string>
    <string name="basic_add">Add</string>
    <string name="basic_edit">Edit</string>
    <string name="basic_rename">Rename</string>
    <string name="basic_cancel">Cancel</string>
    <string name="basic_delete">Delete</string>

    <string name="basic_"></string>


    <!-- form -->
    <string name="form_title_remove_STR">Remove %s</string>
    <string name="form_sure_to_delete_STR">Are you sure you want to delete %s?</string>
    <string name="form_sure_to_delete_coll_STR_and_words">Are you sure you want to delete %s and all its words?</string>
    <string name="form_im_sure">I\'m sure</string>


    <!-- word -->
    <string name="word_original">Original</string>
    <string name="word_translated">Translated</string>
    <string name="word_translation">Translation</string>
    <string name="word_original_w">Original word</string>
    <string name="word_translated_w">Translated word</string>

    <string name="word_insert_new">INSERT A NEW WORD</string>
    <string name="word_edit">Edit word</string>
    <string name="word_delete">Delete word</string>
    <string name="word_deleted">Word deleted</string>

    <string name="word_cant_create_new">Couldn\'t create new word</string>
    <string name="word_cant_delete">Couldn\'t delete this word</string>

    <string name="word_"></string>

    <string name="words_cant_load">Couldn\'t load words</string>


    <!-- collection -->
    <string name="coll_title">Title</string>
    <string name="coll_name">Collection name</string>
    <string name="coll_create_new">Create a new collection</string>
    <string name="coll_add">Add collection</string>
    <string name="coll_rename">Rename collection</string>
    <string name="coll_no_other_add">No other collection to add</string>

    <string name="coll_deleted">Collection deleted</string>
    <string name="coll_cant_rename">Couldn\'t rename collection</string>
    <string name="coll_cant_remove">Couldn\'t remove collection</string>
    <string name="coll_cant_delete">Couldn\'t delete collection</string>
    <string name="coll_err_creating_retry">"Error creating collection, please try again later"</string>

    <string name="coll_"></string>

    <string name="colls_mine">Mine</string>
    <string name="colls_collections">Collections</string>
    <string name="colls_shared">Collections shared</string>
    <string name="colls_add">Add collections</string>

    <string name="colls_cant_add">Couldn\'t add collections</string>
    <string name="colls_cant_load">Couldn\'t load collections</string>
    <string name="colls_cant_update">"Couldn'\t update collections"</string>

    <string name="colls_"></string>


    <!-- study -->
    <string name="study_"></string>


    <!-- class -->
    <string name="class_students">Students</string>
    <string name="class_name">Class name</string>

    <string name="class_share">Share class</string>
    <string name="class_join">Join Class</string>
    <string name="class_joined">Class joined</string>
    <string name="class_rename">Rename class</string>
    <string name="class_create_new">Create a new class</string>
    <string name="class_delete">Delete class</string>
    <string name="class_deleted">Class deleted</string>

    <string name="class_not_found">Class not found</string>
    <string name="class_cant_join">Couldn\'t join class</string>
    <string name="class_cant_load_usernames">Couldn\'t load Usernames</string>
    <string name="class_cant_rename">Couldn\'t rename class</string>
    <string name="class_cant_delete">Couldn\'t delete this class</string>

    <string name="class_"></string>

    <string name="classes_joined">Joined</string>
    <string name="classes_created">Created</string>
    <string name="classes_invited_to">You have been inveted to:</string>

    <string name="classes_"></string>


    <!-- other -->
    <string name="title_activity_delme">ScrollingActivity</string>
    <string name="large_text">
        "Material is the metaphor.\n\n"

        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
        "technologically advanced and open to imagination and magic.\n"
        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
        "flexibility of the material creates new affordances that supercede those in the physical "
        "world, without breaking the rules of physics.\n"
        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
        "interact, and exist in space and in relation to each other. Realistic lighting shows "
        "seams, divides space, and indicates moving parts.\n\n"

        "Bold, graphic, intentional.\n\n"

        "The foundational elements of print based design typography, grids, space, scale, color, "
        "and use of imagery guide visual treatments. These elements do far more than please the "
        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
        "imagery, large scale typography, and intentional white space create a bold and graphic "
        "interface that immerse the user in the experience.\n"
        "An emphasis on user actions makes core functionality immediately apparent and provides "
        "waypoints for the user.\n\n"

        "Motion provides meaning.\n\n"

        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
        "inflection points that initiate motion, transforming the whole design.\n"
        "All action takes place in a single environment. Objects are presented to the user without "
        "breaking the continuity of experience even as they transform and reorganize.\n"
        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
        "Feedback is subtle yet clear. Transitions are efÔ¨Åcient yet coherent.\n\n"

        "3D world.\n\n"

        "The material environment is a 3D space, which means all objects have x, y, and z "
        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
        "position along the z-axis and has a standard 1dp thickness.\n"
        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
        "emulated by manipulating the y-axis.\n\n"

        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component‚Äôs resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won‚Äôt interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>
    <string name="action_settings">Settings</string>
</resources>